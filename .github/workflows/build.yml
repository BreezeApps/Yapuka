name: "publish"

on:
  push:
    branches:
      - release
  workflow_dispatch:

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - uses: pnpm/action-setup@v4

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SIGN: 1
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "v__VERSION__"
          releaseBody: "Am√©liorations, nouvelles fonctionnalit√©s et corrections de bugs."
          includeUpdaterJson: true
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

  deploy-updates:
    needs: publish-tauri
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout current repo
        uses: actions/checkout@v4

      - name: üì• Download release artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: üöÄ Clone tauri-updates
        run: |
          git clone https://github.com/BreezeApps/updater.git

      - name: üóÇÔ∏è Copy update files
        run: |
          mkdir -p updates/yapuka
          cp -r src-tauri/target/release/bundle/**/*.AppImage updates/yapuka/ || true
          cp -r src-tauri/target/release/bundle/**/*.msi updates/yapuka/ || true
          cp -r src-tauri/target/release/bundle/**/*.zip updates/yapuka/ || true
          cp -r src-tauri/target/release/bundle/**/*.deb updates/yapuka/ || true
          cp -r src-tauri/target/release/bundle/**/*.sig updates/yapuka/ || true
          cp -r src-tauri/target/release/bundle/**/latest.json updates/yapuka/

      - name: üìù Commit and push
        shell: bash
        env:
          CI_COMMIT_MESSAGE: update file for update
          CI_COMMIT_AUTHOR: github-actions[bot]
          CI_COMMIT_EMAIL: breezeapps@users.noreply.github.com
        run: |
          cd updates
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "${{ env.CI_COMMIT_EMAIL }}"
          git add yapuka
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push